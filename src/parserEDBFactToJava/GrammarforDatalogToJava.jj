/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 *
 * This parser generates the related Java object of type "datalog.Fact"
 * from an EDB fact as a String .
 */
options
{
  static = false;
}

PARSER_BEGIN(ParserforDatalogToJava)
package parserEDBFactToJava;
import java.util.ArrayList;
import datalog.Fact;

public class ParserforDatalogToJava
{}

PARSER_END(ParserforDatalogToJava)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}

TOKEN : 
{
  < nullValue : "null" >
| < string : "'" (~[ "'" ])* "'" >
| < number :
    (< digit >)+
    (
      "." (< digit >)+
    )? >
| < digit : [ "0"-"9" ] >
| < kindValue : < nameValue > (< nameValue >)* >
| < nameValue :
    [ "a"-"z" ]
  | [ "A"-"Z" ]
  | "-"
  | "_" >
}

Fact start() :
{
  Fact value = null;
}
{
  value = getFact() "." < EOF >
  {
    return value;
  }
}

Fact getFact() :
{
  Token kindToken = null;
  Token schemaToken = null;
  String value = null;
  ArrayList < String > values = new ArrayList < String > ();
  Fact fact = null;
}
{
  (kindToken = < kindValue >)
  (schemaToken = < number >) "("
  (
    value = getValue()
    {
      values.add(value);
    }
    (
      ","
      (
        value = getValue()
        {
          values.add(value);
        }
      )
    )*
  )?
  ")"
  {
    fact = new Fact(kindToken.toString() + schemaToken.toString(), values);
    return fact;
  }
}

String getValue() :
{
  Token valueOfToken = null;
}
{
  (
    valueOfToken = < string >
  | valueOfToken = < number >
  | valueOfToken = < nullValue >
  )
  {
    return valueOfToken.toString();
  }
}